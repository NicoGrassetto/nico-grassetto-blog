---
export interface Props {
	title?: string;
	description?: string;
	currentPage?: 'home' | 'about';
}

const { title = "Nico Grassetto's Blog", description = "A modern blog built with Astro.js", currentPage = 'home' } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/nico-grassetto-blog/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={description} />
		<meta name="author" content="Nico Grassetto" />
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:site_name" content="Nico Grassetto" />
		
		<!-- Twitter -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description} />
		<meta name="twitter:creator" content="@ngrassetto" />
				<!-- RSS Feed -->
		<link rel="alternate" type="application/rss+xml" title="Nico Grassetto's Blog" href="/feed" />
		
		<!-- Prevent flash of unstyled content -->
		<script>
			(function() {
				function getInitialTheme() {
					const savedTheme = localStorage.getItem('theme');
					if (savedTheme) return savedTheme;
					if (window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches) {
						return 'light';
					}
					return 'dark';
				}
				document.documentElement.setAttribute('data-theme', getInitialTheme());
			})();
		</script>
		
		<title>{title}</title>
	</head>	<body>
		<div class="container">
			<header class="site-header">
				<div class="header-top">
					<h1 class="site-title">NICO GRASSETTO™</h1>
					<button class="theme-toggle" id="theme-toggle" aria-label="Toggle dark/light mode">
						<span class="theme-toggle-icon"></span>
					</button>
				</div>
				<p class="site-subtitle">Engineering thoughtful web experiences with modern technologies.</p>				<nav class="site-nav">
					{currentPage === 'home' && (
						<a href="/nico-grassetto-blog/about" class="button">About Nico Grassetto</a>
					)}
					{currentPage === 'about' && (
						<a href="/nico-grassetto-blog/" class="button back-to-blog">Back to Blog</a>
					)}
				</nav>
			</header>
			<main>
				<slot />
			</main>
		</div>
		<script>
			// Theme toggle functionality
			const themeToggle = document.getElementById('theme-toggle');
			const html = document.documentElement;
			
			// Function to get initial theme
			function getInitialTheme() {
				// Check for saved theme preference
				const savedTheme = localStorage.getItem('theme');
				if (savedTheme) {
					return savedTheme;
				}
				
				// Check system preference
				if (window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches) {
					return 'light';
				}
				
				// Default to dark
				return 'dark';
			}
			
			// Set initial theme
			const initialTheme = getInitialTheme();
			html.setAttribute('data-theme', initialTheme);
			
			// Listen for system theme changes
			if (window.matchMedia) {
				window.matchMedia('(prefers-color-scheme: light)').addEventListener('change', (e) => {
					// Only auto-switch if user hasn't manually set a preference
					if (!localStorage.getItem('theme')) {
						const newTheme = e.matches ? 'light' : 'dark';
						html.setAttribute('data-theme', newTheme);
					}
				});
			}
			
			// Theme toggle click handler
			themeToggle?.addEventListener('click', () => {
				const currentTheme = html.getAttribute('data-theme');
				const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
				
				html.setAttribute('data-theme', newTheme);
				localStorage.setItem('theme', newTheme);
			});
		</script>
	</body>
</html>

<style is:global>	:root {
		/* Dark theme (default) */
		--bg-primary: #000000;
		--bg-secondary: #111111;
		--text-primary: #ffffff;
		--text-secondary: #cccccc;
		--text-muted: #999999;
		--accent-primary: #ffffff;
		--accent-hover: #cccccc;
		--border-primary: #333333;
		--border-secondary: #444444;
		--link-color: #ffffff;
		--link-hover: #cccccc;
		--button-bg: #ffffff;
		--button-text: #000000;
		--button-hover-bg: #f0f0f0;
		--toggle-bg: #333333;
		--toggle-hover-bg: #444444;
		--shadow-color: rgba(0, 0, 0, 0.5);
	}

	[data-theme="light"] {
		/* Light theme */
		--bg-primary: #ffffff;
		--bg-secondary: #f8f9fa;
		--text-primary: #000000;
		--text-secondary: #333333;
		--text-muted: #666666;
		--accent-primary: #000000;
		--accent-hover: #333333;
		--border-primary: #e0e0e0;
		--border-secondary: #d0d0d0;
		--link-color: #000000;
		--link-hover: #333333;
		--button-bg: #000000;
		--button-text: #ffffff;
		--button-hover-bg: #333333;
		--toggle-bg: #e0e0e0;
		--toggle-hover-bg: #d0d0d0;
		--shadow-color: rgba(0, 0, 0, 0.1);
	}
	html {
		transition: background-color 0.3s ease, color 0.3s ease;
	}
	*,
	*::before,
	*::after {
		box-sizing: border-box;
		transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, box-shadow 0.3s ease;
	}
	html,
	body {
		margin: 0;
		padding: 0;
		font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
		line-height: 1.6;
		color: var(--text-primary);
		background-color: var(--bg-primary);
		font-size: 16px;
		transition: background-color 0.3s ease, color 0.3s ease;
	}

	.container {
		max-width: 800px;
		margin: 0 auto;
		padding: 2rem;
	}
	.site-header {
		margin-bottom: 4rem;
		text-align: left;
	}

	.header-top {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 0.5rem;
	}

	.theme-toggle {
		background-color: var(--toggle-bg);
		border: none;
		border-radius: 50%;
		width: 44px;
		height: 44px;
		cursor: pointer;
		transition: all 0.3s ease;
		display: flex;
		align-items: center;
		justify-content: center;
		position: relative;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
	}	.theme-toggle:hover {
		background-color: var(--toggle-hover-bg);
		transform: scale(1.05);
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
	}

	.theme-toggle:active {
		transform: scale(0.95);
		transition: transform 0.1s ease;
	}

	.theme-toggle:focus {
		outline: 2px solid var(--accent-primary);
		outline-offset: 2px;
	}

	.theme-toggle:focus:not(:focus-visible) {
		outline: none;
	}

	.theme-toggle:focus-visible {
		outline: 2px solid var(--accent-primary);
		outline-offset: 2px;
	}

	.theme-toggle-icon {
		width: 20px;
		height: 20px;
		position: relative;
		transition: all 0.3s ease;
	}

	/* Sun icon for dark mode (when clicking will switch to light) */
	.theme-toggle-icon::before {
		content: '';
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		width: 12px;
		height: 12px;
		border-radius: 50%;
		background-color: var(--text-primary);
		transition: all 0.3s ease;
	}

	.theme-toggle-icon::after {
		content: '';
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		width: 20px;
		height: 20px;
		border: 2px solid transparent;
		border-radius: 50%;
		box-shadow: 
			0 -8px 0 -6px var(--text-primary),
			6px -6px 0 -6px var(--text-primary),
			8px 0 0 -6px var(--text-primary),
			6px 6px 0 -6px var(--text-primary),
			0 8px 0 -6px var(--text-primary),
			-6px 6px 0 -6px var(--text-primary),
			-8px 0 0 -6px var(--text-primary),
			-6px -6px 0 -6px var(--text-primary);
		transition: all 0.3s ease;
	}

	/* Moon icon for light mode */
	[data-theme="light"] .theme-toggle-icon::before {
		width: 16px;
		height: 16px;
		border-radius: 50%;
		background-color: transparent;
		box-shadow: 4px 0 0 var(--text-primary);
		transform: translate(-50%, -50%) rotate(0deg);
	}

	[data-theme="light"] .theme-toggle-icon::after {
		display: none;
	}

	.site-title {
		font-size: 1.5rem;
		font-weight: 700;
		margin: 0 0 0.5rem 0;
		color: var(--text-primary);
		letter-spacing: 0.5px;
		transition: color 0.3s ease;
		cursor: default;
	}

	.site-title:hover {
		color: var(--text-secondary);
	}
	.site-subtitle {
		font-size: 1.25rem; /* Made larger */
		color: var(--text-secondary);
		margin: 0 0 2rem 0; /* Increased bottom margin for better spacing */
		line-height: 1.5;
		text-align: center; /* Centered the text */
		max-width: 600px; /* Limit width for better readability */
		margin-left: auto; /* Center the element horizontally */
		margin-right: auto; /* Center the element horizontally */
		margin-bottom: 2rem; /* Maintain bottom spacing */
	}	.site-nav {
		margin-bottom: 1.5rem;
		text-align: center; /* Center the button */
		display: flex;
		justify-content: center;
		gap: 1rem;
		flex-wrap: wrap;
	}

	.site-nav a {
		color: var(--link-color);
		text-decoration: none;
		font-size: 0.9rem;
		transition: color 0.2s ease;
		border-bottom: 1px solid transparent;
	}

	.site-nav a:hover {
		color: var(--link-hover);
		border-bottom-color: var(--link-hover);
	}

	main {
		min-height: 60vh;
	}

	.section-title {
		font-size: 1.25rem;
		font-weight: 600;
		margin: 0 0 2rem 0;
		color: var(--text-primary);
	}

	.blog-list {
		list-style: none;
		padding: 0;
		margin: 0;
	}

	.blog-item {
		margin-bottom: 1.5rem;
		padding-bottom: 1.5rem;
		border-bottom: 1px solid var(--border-primary);
	}

	.blog-item:last-child {
		border-bottom: none;
		margin-bottom: 0;
		padding-bottom: 0;
	}

	.blog-link {
		color: var(--link-color);
		text-decoration: none;
		display: block;
		transition: all 0.2s ease;
		padding: 0.25rem 0;
		margin: -0.25rem 0;
		border-radius: 4px;
	}

	.blog-link:hover {
		color: var(--link-hover);
		background: rgba(255, 255, 255, 0.02);
		padding: 0.25rem 0.5rem;
		margin: -0.25rem -0.5rem;
	}

	.blog-link:hover .blog-title {
		text-decoration: underline;
	}

	.blog-title {
		font-size: 1rem;
		font-weight: 500;
		margin: 0 0 0.25rem 0;
		line-height: 1.4;
		transition: text-decoration 0.2s ease;
	}

	.blog-meta {
		font-size: 0.875rem;
		color: var(--text-muted);
		display: flex;
		gap: 1rem;
		align-items: center;
	}	.button {
		background-color: var(--button-bg);
		color: var(--button-text) !important;
		padding: 0.5rem 1rem;
		border: none;
		border-radius: 4px;
		text-decoration: none;
		font-size: 1rem;
		font-weight: normal;
		cursor: pointer;
		transition: all 0.3s ease;
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
		width: auto;
		max-width: 200px;
	}
	.button::after {
		content: '→';
		font-size: 1rem;
		transition: transform 0.2s ease;
		color: var(--button-text);
	}

	.button.back-to-blog::after {
		content: '←';
	}
	
	.button:hover {
		background-color: var(--button-hover-bg);
		color: var(--button-text) !important;
		transform: translateY(-1px);
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
	}
	.button:hover::after {
		transform: translateX(2px); /* Slight movement on hover */
	}

	.button.back-to-blog:hover::after {
		transform: translateX(-2px); /* Move left for back button */
	}
	@media (max-width: 768px) {
		.container {
			padding: 1.5rem;
		}
		
		.site-header {
			margin-bottom: 3rem;
		}

		.header-top {
			gap: 1rem;
		}

		.site-title {
			font-size: 1.25rem;
		}

		.theme-toggle {
			width: 40px;
			height: 40px;
		}

		.theme-toggle-icon {
			width: 18px;
			height: 18px;
		}

		.theme-toggle-icon::before {
			width: 10px;
			height: 10px;
		}

		[data-theme="light"] .theme-toggle-icon::before {
			width: 14px;
			height: 14px;
		}
	}
</style>
