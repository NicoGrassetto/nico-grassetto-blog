---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

type Props = {
  entry: CollectionEntry<'blog'>;
};

const { entry } = Astro.props;
const { Content } = await entry.render();

// Format the date for display
const formatDate = (dateString: string) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};
---

<Layout title={entry.data.title} description={entry.data.description}>
  <article class="blog-post">
    <header class="post-header">
      <h1 class="post-title">{entry.data.title}</h1>
      <div class="post-meta">
        <time datetime={entry.data.date}>{formatDate(entry.data.date)}</time>
      </div>
    </header>
    
    <div class="post-content">
      <Content />
    </div>
      <footer class="post-footer">
      <a href="/nico-grassetto-blog/" class="back-link">‚Üê Back to Blog</a>
    </footer></article>
</Layout>

<style>
  .post-header {
    margin-bottom: 3rem;
  }

  .post-title {
    font-size: 2rem;
    line-height: 1.3;
    margin: 0 0 1rem 0;
    color: var(--text-primary);
    font-weight: 600;
  }

  .post-meta time {
    color: var(--text-muted);
    font-size: 0.875rem;
  }

  .post-content {
    font-size: 1rem;
    line-height: 1.7;
    color: var(--text-primary);
    margin-bottom: 3rem;
  }

  .post-content :global(h1),
  .post-content :global(h2),
  .post-content :global(h3),
  .post-content :global(h4),
  .post-content :global(h5),
  .post-content :global(h6) {
    color: var(--text-primary);
    margin: 2rem 0 1rem 0;
    font-weight: 600;
  }

  .post-content :global(h2) {
    font-size: 1.5rem;
  }

  .post-content :global(h3) {
    font-size: 1.25rem;
  }

  .post-content :global(p) {
    margin: 1.5rem 0;
  }

  .post-content :global(ul),
  .post-content :global(ol) {
    margin: 1.5rem 0;
    padding-left: 2rem;
  }

  .post-content :global(li) {
    margin: 0.5rem 0;
  }

  .post-content :global(pre) {
    background: var(--bg-secondary);
    color: var(--text-primary);
    padding: 1.5rem;
    border-radius: 6px;
    overflow-x: auto;
    margin: 2rem 0;
    border: 1px solid var(--border-primary);
  }

  .post-content :global(code) {
    background: var(--bg-secondary);
    color: var(--text-primary);
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
    font-size: 0.875rem;
  }

  .post-content :global(pre code) {
    background: transparent;
    color: inherit;
    padding: 0;
  }

  .post-content :global(blockquote) {
    border-left: 3px solid var(--border-primary);
    margin: 2rem 0;
    padding: 1rem 2rem;
    background: var(--bg-secondary);
    font-style: italic;
  }

  .post-content :global(a) {
    color: var(--link-color);
    text-decoration: underline;
    transition: color 0.2s ease;
  }

  .post-content :global(a:hover) {
    color: var(--link-hover);
  }

  .post-footer {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border-primary);
  }

  .back-link {
    color: var(--link-color);
    text-decoration: none;
    font-size: 0.9rem;
    transition: color 0.2s ease;
  }

  .back-link:hover {
    color: var(--link-hover);
    text-decoration: underline;
  }

  @media (max-width: 768px) {
    .post-title {
      font-size: 1.75rem;
    }
    
    .post-content {
      font-size: 0.95rem;
    }
    
    .post-content :global(h2) {
      font-size: 1.375rem;
    }
    
    .post-content :global(h3) {
      font-size: 1.125rem;
    }
  }
</style>
